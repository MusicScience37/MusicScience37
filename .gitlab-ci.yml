stages:
  - test
  - build
  - deploy

include:
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
variables:
  SECURE_LOG_LEVEL: debug

pre-commit:
  stage: test
  image: musicscience37/pipenv:jammy
  variables:
    POETRY_CACHE_DIR: ${CI_PROJECT_DIR}/.poetry-cache
  script:
    - poetry config virtualenvs.in-project true
    - poetry env use 3.11
    - poetry install --sync
    - poetry run pre-commit run --all-files
  cache:
    key:
      prefix: poetry-${CI_JOB_NAME}
      files:
        - poetry.lock
    paths:
      - .poetry-cache
  needs: []

spell check:
  stage: test
  needs: []
  image: node
  script:
    - npm install -g cspell
    - cspell lint
      "**/*.py"
      "**/*.txt"
      "**/*.md"
      "**/*.rst"
      "**/*.yaml"
      "**/*.json"
      "**/*.sh"

build:
  stage: build
  image: musicscience37/pipenv:jammy
  variables:
    POETRY_CACHE_DIR: ${CI_PROJECT_DIR}/.poetry-cache
  script:
    - poetry config virtualenvs.in-project true
    - poetry env use 3.11
    - poetry install --sync
    - poetry run python3 ./tool.py build -l ja
    - poetry run python3 ./tool.py build -l en
  cache:
    key:
      prefix: poetry-${CI_JOB_NAME}
      files:
        - poetry.lock
    paths:
      - .poetry-cache
  artifacts:
    paths:
      - build
    expire_in: "1 week"
  needs: []

pages:
  stage: deploy
  image: alpine
  script:
    - mkdir -p public
    - mv build/ja/html public/ja
    - mv build/en/html public/en
    - wget -nv https://kicon.musicscience37.com/KIcon.ico -O public/favicon.ico
  artifacts:
    paths:
      - public
  only:
    - main
  needs: [build]
